@using Microsoft.AspNetCore.Identity


@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@model IEnumerable<Character>


@if (User.IsInRole("User"))
{

    var usr = await UserManager.GetUserAsync(User);
    var email = usr?.Email;

    <h2 align="center">My Characters</h2>

    <div align="center" style="display: block">
        <a href="/Character/InsertCharacter/">Create a New Character</a>
    </div>

    <table class="table">
        <tr>            
            <th>Name</th>
            <th>Species</th>
            <th>Gender</th>
            <th>Class 1</th>
            <th>Subclass 1</th>
            <th>Class 1 Level</th>
            <th>Class 2</th>
            <th>Subclass 2</th>
            <th>Class 2 Level</th>
            <th>Class 3</th>
            <th>Subclass 3</th>
            <th>Class 3 Level</th>
        </tr>

        @foreach (var character in @Model)
        {
            @if (character.UserId == usr.Id)
            {
                <tr>                    
                    <td><a href=/Character/ViewCharacter/@character.CharacterID>@character.Name</td>
                    <td>@character.Species</td>
                    <td>@character.Gender</td>
                    <td>@character.Class1</td>
                    <td>@character.Subclass1</td>
                    <td>@character.Class1Level</td>
                    <td>@character.Class2</td>
                    <td>@character.Subclass2</td>
                    <td>@character.Class2Level</td>
                    <td>@character.Class3</td>
                    <td>@character.Subclass3</td>
                    <td>@character.Class3Level</td>

                </tr>
            }


        }

    </table>

}
else
{
    <h2 align="center">Unauthorized Access</h2>
}

