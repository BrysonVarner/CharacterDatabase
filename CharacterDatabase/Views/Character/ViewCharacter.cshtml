@using Microsoft.AspNetCore.Identity;

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@model Character
@{
    IdentityUser usr = null;
    @if (User.IsInRole("User") || User.IsInRole("Admin"))
    {
        usr = await UserManager.GetUserAsync(User);
    }

}


<!DOCTYPE html>
<html lang="en">
<head>

</head>
<body>
    <div class="page-title">
        <h3>@Model.Name Character Details</h3>
    </div>

    <div class="view-data">
        <table>
            @if (User.IsInRole("Admin"))
            {
                <tr>
                    <th>ID</th>
                    <td>@Model.CharacterID</td>
                    <th>Owner Info</th>
                    <td>@Model.UserId</td>
                </tr>
            } 
            <tr>
                <th>Name</th>
                <td>@Model.Name</td>
                <th>Species</th>
                <td>@Model.Species</td>
                <th>Gender</th>
                <td>@Model.Gender</td>
                <th>Speed</th>
                <td>@Model.Speed</td>
                <th>Class 1</th>
                <td>@Model.Class1</td>
                <th>Subclass 1</th>
                <td>@Model.Subclass1</td>
                <th>Class 1 Level</th>
                <td>@Model.Class1Level</td>
            </tr>

            <tr>
                <th>Class 2</th>
                <td>@Model.Class2</td>
                <th>Subclass 2</th>
                <td>@Model.Subclass2</td>
                <th>Class 2 Level</th>
                <td>@Model.Class2Level</td>
                <th>Class 3</th>
                <td>@Model.Class3</td>
                <th>Subclass 3</th>
                <td>@Model.Subclass3</td>
                <th>Class 3 Level</th>
                <td>@Model.Class3Level</td>
            </tr>

            <tr>
                <th>Height</th>
                <td>@Model.Height</td>
                <th>Weight</th>
                <td>@Model.Weight</td>
                <th>Age</th>
                <td>@Model.Age</td>
                <th>Hair Color</th>
                <td>@Model.HairColor</td>
                <th>Eye Color</th>
                <td>@Model.EyeColor</td>
            </tr>

            <tr>
                <th>Strength</th>
                <td>@Model.Strength</td>
                <th>Dexterity</th>
                <td>@Model.Dexterity</td>
                <th>Constitution</th>
                <td>@Model.Constitution</td>
                <th>Intelligence</th>
                <td>@Model.Intelligence</td>
                <th>Wisdom</th>
                <td>@Model.Wisdom</td>
                <th>Charisma</th>
                <td>@Model.Wisdom</td>
            </tr>

            <tr>
                <th>Character Notes</th>
                <td>@Model.CharacterNotes</td>
            </tr>
        </table>
    </div>
    @if (User.IsInRole("User") || User.IsInRole("Admin"))
    {
        @if (@Model.UserId == usr.Id || User.IsInRole("Admin"))
        {
            <div style="display: inline-block">
                <form action="\Character\UpdateCharacter\@Model.CharacterID">
                    <input type="submit" value="Update this Character" />
                </form>
            </div>
            <div style="display: inline-block">
                @using (Html.BeginForm("DeleteCharacter", "Character", "Post"))
                {
                    <input type="hidden" asp-for="CharacterID" value="@Model.CharacterID" />
                    <input type="submit" onclick="return confirm('Are you sure?')" value="Delete this Character" />
                }
            </div>
        }
    }


</body>
